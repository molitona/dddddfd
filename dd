window.constants = {
    env: "production",
    revision: "ce9ee47c5d181dd5b53b033bbd9ffc88679a2dd0",
    expression_operands: {
        contains: "contains",
        does_not_contain: "does_not_contain"
    },
    expression_left_fields: {
        report_title: "report_title",
        any_field: "any_field",
        report_body: "report_body",
        report_weakness: "report_weakness",
        report_severity: "report_severity"
    },
    marketing_site_url: "https://www.hackerone.com",
    jira: {
        public_key: ["-----BEGIN PUBLIC KEY-----", "MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAy8H4gLqU2Lkkce11/Scn", "zac5uLs4Wa3xkg8pwTJb4AaUXxPp5c49MVXRlGhLMeQ2Wv1AfNvxJu4gcmvUyn6Q", "A9hD156grA7qXD3G7aX4DJ4N5ialNaDQGZCWRqxAqwrT7KoXZohbiima5bAyUjgG", "SwdGKTIHp7djBNfWa8Wv9uDbJZkNRkhzcuJ65dmsPk0gURosCzo3FhL9e0kjVt66", "GbTMjP02L0BZYpFhwTbHTsrw/xpmW9RRDGZ9jYNXbCeki17bYdVSdGswvamvzv5Y", "4EBK4hV4ocs+MumEWC5lYn1zdWjXaQcDTnrQLgF1BJ//hB7l6nPSrynYCiM4ceCU", "vo1/2p6nOvNvbBjVlRMIYbsrrUgaBT1tvdHRqTkBDpxzDEQcNBuEgxhxu7oHNDvK", "HnZsorPPvfixqhpB3jcO9NuYujPakAV/ishjrwwQtRIRXqLAFHYYQxbzfikhi0xs", "RJGg/kzpkmz9F93cATONpMFSVrg6a4Vxmt0Yt8zND2WNi/8qHCWN2yju2DUWLLRm", "6MdAkz48MMTCmYXRybB+6g8a9F4YBdl2TGnWsYfQ1R/y0utRKBC+P7cQwVTP8eus", "liA2Ts+KvYyVgD6StR629HFyNCNglm9+NuudtYdUUfIHGlEq769wLwHX3bgddqBW", "hgko43a2w0IWTvNkga5FBcMCAwEAAQ==", "-----END PUBLIC KEY-----"],
        default_summary: "{{title}}",
        default_description: "{{details_truncated}}",
        default_labels: "HackerOne",
        integration_variables: {
            all: ["{{title}}", "{{email}}", "{{email_local_part}}", "{{details}}", "{{details_truncated}}", "{{details_markdown}}", "{{details_jira}}", "{{details_custom_jira}}", "{{report_link}}", "{{report_id}}", "{{reporter_link}}", "{{reporter_name}}", "{{reporter_username}}", "{{jira_severity}}", "{{severity_rating}}", "{{severity_rating_capitalized}}", "{{cvss_score}}", "{{cvss_vector}}", "{{submission_date}}", "{{submission_date_y_m_d}}", "{{due_date(days_from_now)}}", "{{days_after_report(days)}}", "{{submission_date_custom_format}}", "{{escalation_time}}", "{{weakness}}", "{{vulnerability_information}}", "{{asset_identifier}}", "{{remediation_advice}}", "{{triage_summary}}"],
            date: ["{{days_after_report(days)}}", "{{due_date(days_from_now)}}", "{{escalation_time}}", "{{submission_date}}", "{{submission_date_custom_format}}", "{{submission_date_y_m_d}}"],
            option: ["{{jira_severity}}", "{{severity_rating}}", "{{weakness}}", "{{asset_identifier}}"]
        }
    },
    animations: {
        scrollTime: 500,
        topBarOffset: -100
    },
    accountRecoveryPhoneNumberVerification: {
        timeout: 60
    },
    pagination: {
        page_size: 10,
        directory_items_per_page: 100,
        hacktivity_items_per_page: 25,
        my_hackerone_items_per_page: 25,
        security_check_items_per_page: 25,
        user_thanks_items_per_page: 25,
        user_sessions_items_per_page: 4,
        coverage_analytics_items_per_page: 25
    },
    raven: {
        "public": "90427e0cbcf0487db664e4357d17761b",
        fqdn: "errors.hackerone.net",
        project_id: "26"
    },
    breakpoints: {
        mobileBreakpoint: 640
    },
    alias: {
        maxLength: 30
    },
    activities: {
        types: {
            program_structured_scopes_bulk_updated: "ActivitiesProgramStructuredScopesBulkUpdated",
            added_to_pentest: "ActivitiesAddedToPentest",
            agreed_on_going_public: "ActivitiesAgreedOnGoingPublic",
            bounty_awarded: "ActivitiesBountyAwarded",
            bounty_suggested: "ActivitiesBountySuggested",
            bug_cloned: "ActivitiesBugCloned",
            bug_duplicate: "ActivitiesBugDuplicate",
            bug_filed: "ActivitiesBugFiled",
            bug_inactive: "ActivitiesBugInactive",
            bug_informative: "ActivitiesBugInformative",
            bug_needs_more_info: "ActivitiesBugNeedsMoreInfo",
            bug_new: "ActivitiesBugNew",
            bug_not_applicable: "ActivitiesBugNotApplicable",
            bug_pending_program_review: "ActivitiesBugPendingProgramReview",
            bug_reopened: "ActivitiesBugReopened",
            bug_resolved: "ActivitiesBugResolved",
            bug_retesting: "ActivitiesBugRetesting",
            bug_spam: "ActivitiesBugSpam",
            bug_triaged: "ActivitiesBugTriaged",
            cancelled_disclosure_request: "ActivitiesCancelledDisclosureRequest",
            changed_campaign: "ActivitiesChangedCampaign",
            changed_scope: "ActivitiesChangedScope",
            checklist_check_claimed: "ActivitiesChecklistCheckClaimed",
            checklist_check_expired: "ActivitiesChecklistCheckExpired",
            checklist_check_released: "ActivitiesChecklistCheckReleased",
            checklist_check_response_approved: "ActivitiesChecklistCheckResponseApproved",
            checklist_check_response_comment: "ActivitiesChecklistCheckResponseComment",
            checklist_check_response_created: "ActivitiesChecklistCheckResponseCreated",
            checklist_check_response_rejected: "ActivitiesChecklistCheckResponseRejected",
            checklist_check_response_updated: "ActivitiesChecklistCheckResponseUpdated",
            checklist_check_revoked: "ActivitiesChecklistCheckRevoked",
            checklist_expiration_notification: "ActivitiesChecklistExpirationNotification",
            checklist_started: "ActivitiesChecklistStarted",
            comment: "ActivitiesComment",
            comments_closed: "ActivitiesCommentsClosed",
            cve_id_added: "ActivitiesCveIdAdded",
            external_advisory_added: "ActivitiesExternalAdvisoryAdded",
            external_user_invitation_cancelled: "ActivitiesExternalUserInvitationCancelled",
            external_user_invited: "ActivitiesExternalUserInvited",
            external_user_joined: "ActivitiesExternalUserJoined",
            external_user_removed: "ActivitiesExternalUserRemoved",
            group_assigned_to_bug: "ActivitiesGroupAssignedToBug",
            hacker_requested_mediation: "ActivitiesHackerRequestedMediation",
            invitation_received: "ActivitiesInvitationReceived",
            manually_disclosed: "ActivitiesManuallyDisclosed",
            mediation_requested: "ActivitiesMediationRequested",
            nobody_assigned_to_bug: "ActivitiesNobodyAssignedToBug",
            not_eligible_for_bounty: "ActivitiesNotEligibleForBounty",
            pentest_check_assigned: "ActivitiesPentestCheckAssigned",
            pentest_check_completed: "ActivitiesPentestCheckCompleted",
            pentest_check_unassigned: "ActivitiesPentestCheckUnassigned",
            pentest_check_updated: "ActivitiesPentestCheckUpdated",
            pentester_awarded: "ActivitiesPentesterAwarded",
            pentest_published: "ActivitiesPentestPublished",
            pentest_started: "ActivitiesPentestStarted",
            program_hacker_joined: "ActivitiesProgramHackerJoined",
            program_hacker_left: "ActivitiesProgramHackerLeft",
            program_inactive: "ActivitiesProgramInactive",
            reassigned_to_team: "ActivitiesReassignedToTeam",
            reference_id_added: "ActivitiesReferenceIdAdded",
            removed_from_pentest: "ActivitiesRemovedFromPentest",
            report_became_public: "ActivitiesReportBecamePublic",
            report_collaborator_invited: "ActivitiesReportCollaboratorInvited",
            report_collaborator_joined: "ActivitiesReportCollaboratorJoined",
            report_custom_field_value_updated: "ActivitiesReportCustomFieldValueUpdated",
            report_organization_inboxes_updated: "ActivitiesReportOrganizationInboxesUpdated",
            report_remediation_guidance_updated: "ActivitiesReportRemediationGuidanceUpdated",
            report_retest_approved: "ActivitiesReportRetestApproved",
            report_retest_canceled: "ActivitiesReportRetestCanceled",
            report_retest_rejected: "ActivitiesReportRetestRejected",
            report_severity_updated: "ActivitiesReportSeverityUpdated",
            report_title_updated: "ActivitiesReportTitleUpdated",
            report_triage_summary_created: "ActivitiesReportTriageSummaryCreated",
            report_undisclosed: "ActivitiesReportUndisclosed",
            report_vulnerability_types_updated: "ActivitiesReportVulnerabilityTypesUpdated",
            retest_user_expired: "ActivitiesRetestUserExpired",
            swag_awarded: "ActivitiesSwagAwarded",
            team_bounty_table_updated: "ActivitiesTeamBountyTableUpdated",
            team_policy_updated: "ActivitiesTeamPolicyUpdated",
            team_post_created: "ActivitiesTeamPostCreated",
            team_published: "ActivitiesTeamPublished",
            team_structured_scope_updated: "ActivitiesTeamStructuredScopeUpdated",
            user_assigned_to_bug: "ActivitiesUserAssignedToBug",
            user_banned_from_program: "ActivitiesUserBannedFromProgram",
            user_completed_retest: "ActivitiesUserCompletedRetest",
            user_joined: "ActivitiesUserJoined",
            user_left_retest: "ActivitiesUserLeftRetest"
        },
        bounty_awarded: "Activities::BountyAwarded",
        bounty_scheduled: "Activities::BountyScheduled",
        bounty_recalled: "Activities::BountyRecalled",
        swag_awarded: "Activities::SwagAwarded",
        not_eligible_for_bounty: "Activities::NotEligibleForBounty",
        user_completed_retest: "Activities::UserCompletedRetest",
        user_left_retest: "Activities::UserLeftRetest"
    },
    genderNeutrality: {
        greetings: ["hi", "hey", "hello", "dear"],
        terms: ["sir", "man", "guys", "mister", "miss", "madam", "ma'am"]
    },
    hacker_email_alias_domain: "wearehackerone.com",
    notification: {
        custom_message_character_limit: 120,
        type: {
            bountyAwarded: "Notifications::BountyAwarded",
            bountySuggested: "Notifications::BountySuggested",
            bugClosed: "Notifications::BugClosed",
            bugInactive: "Notifications::BugInactive",
            programInactive: "Notifications::ProgramInactive",
            bugNeedsMoreInfo: "Notifications::BugNeedsMoreInfo",
            bugNew: "Notifications::BugNew",
            bugReceived: "Notifications::BugReceived",
            bugReopened: "Notifications::BugReopened",
            bugPendingProgramReview: "Notifications::BugPendingProgramReview",
            bugTriaged: "Notifications::BugTriaged",
            bugRetesting: "Notifications::BugRetesting",
            changedScope: "Notifications::ChangedScope",
            checklistStarted: "Notifications::ChecklistStarted",
            checklistCheckResponseReminder: "Notifications::ChecklistCheckResponseReminder",
            checklistCheckRevoked: "Notifications::ChecklistCheckRevoked",
            checklistCheckResponseApproved: "Notifications::ChecklistCheckResponseApproved",
            checklistCheckResponseRejected: "Notifications::ChecklistCheckResponseRejected",
            checklistCheckResponseComment: "Notifications::ChecklistCheckResponseComment",
            checklistExpiration: "Notifications::ChecklistExpiration",
            commentPosted: "Notifications::CommentPosted",
            commentsClosed: "Notifications::CommentsClosed",
            earnedBadge: "Notifications::EarnedBadge",
            externalUserJoined: "Notifications::ExternalUserJoined",
            groupAssignedToBug: "Notifications::GroupAssignedToBug",
            invitationReceived: "Notifications::InvitationReceived",
            manuallyDisclosed: "Notifications::ManuallyDisclosed",
            mutualDisclosureRequest: "Notifications::MutualDisclosureRequest",
            cancelledDisclosureRequest: "Notifications::CancelledDisclosureRequest",
            changedCampaign: "Notifications::ChangedCampaign",
            nobodyAssignedToBug: "Notifications::NobodyAssignedToBug",
            notEligibleForBounty: "Notifications::NotEligibleForBounty",
            pentestReportRetestOverdue: "Notifications::PentestReportRetestOverdue",
            pentestCheckAssigned: "Notifications::PentestCheckAssigned",
            pentestCheckCompleted: "Notifications::PentestCheckCompleted",
            pentestCheckUnassigned: "Notifications::PentestCheckUnassigned",
            pentestCheckUpdated: "Notifications::PentestCheckUpdated",
            pentestPublished: "Notifications::PentestPublished",
            pentesterAwarded: "Notifications::PentesterAwarded",
            pentestStartsSoon: "Notifications::PentestStartsSoon",
            pentestEndsSoon: "Notifications::PentestEndsSoon",
            pentestApplicationNotAccepted: "Notifications::PentestApplicationNotAccepted",
            pentestStarted: "Notifications::PentestStarted",
            pentestSummaryReportUploaded: "Notifications::PentestSummaryReportUploaded",
            pentestSummaryReportNewVersionUploaded: "Notifications::PentestSummaryReportNewVersionUploaded",
            addedToPentest: "Notifications::AddedToPentest",
            removedFromPentest: "Notifications::RemovedFromPentest",
            pentestSurveyReady: "Notifications::PentestSurveyReady",
            pentestSurveyReminder: "Notifications::PentestSurveyReminder",
            pentestSurveyFinalReminder: "Notifications::PentestSurveyFinalReminder",
            pentestSurveyCompleted: "Notifications::PentestSurveyCompleted",
            reportBecamePublic: "Notifications::ReportBecamePublic",
            reportUndisclosed: "Notifications::ReportUndisclosed",
            reportReassignedToTeam: "Notifications::ReportReassignedToTeam",
            reportWillBecomePublic: "Notifications::ReportWillBecomePublic",
            reportRetestInvitationReceived: "Notifications::ReportRetestInvitationReceived",
            reportRetestRequested: "Notifications::ReportRetestRequested",
            reportRetestApproved: "Notifications::ReportRetestApproved",
            reportRetestRejected: "Notifications::ReportRetestRejected",
            reportRetestCanceled: "Notifications::ReportRetestCanceled",
            swagAwarded: "Notifications::SwagAwarded",
            teamBountyTableUpdated: "Notifications::TeamBountyTableUpdated",
            teamPolicyUpdated: "Notifications::TeamPolicyUpdated",
            teamPostCreated: "Notifications::TeamPostCreated",
            teamStructuredScopeUpdated: "Notifications::TeamStructuredScopeUpdated",
            programStructuredScopesBulkUpdated: "Notifications::ProgramStructuredScopesBulkUpdated",
            userAssignedToBug: "Notifications::UserAssignedToBug",
            userCompletedRetest: "Notifications::UserCompletedRetest",
            userLeftRetest: "Notifications::UserLeftRetest"
        }
    },
    invitation: {
        authOption: {
            useExistingAccount: "use-existing-account",
            useCurrentAccount: "use-current-account",
            createNewAccount: "create-new-account",
            signInWithSaml: "sign-in-with-saml",
            signUpWithSaml: "sign-up-with-saml",
            hasNoAccess: "has-no-access",
            claim: "claim"
        },
        type: {
            claimBounty: "Invitations::ClaimBounty",
            claimReport: "Invitations::ClaimReport",
            disclosureAssistanceReport: "Invitations::DisclosureAssistanceReport",
            forwardedEmail: "Invitations::ForwardedEmail",
            hallOfFame: "Invitations::HallOfFame",
            organizationMember: "Invitations::OrganizationMember",
            report: "Invitations::Report",
            reportCollaborator: "Invitations::ReportCollaborator",
            reportDraft: "Invitations::ReportDraft",
            retest: "Invitations::Retest",
            softLaunch: "Invitations::SoftLaunch",
            teamMember: "Invitations::TeamMember"
        },
        status: {
            never: "never",
            expired: "expired",
            valid: "valid"
        },
        source: {
            priority_queue: "priority_queue_invite"
        },
        requirement: {
            terms: "terms",
            mfa: "mfa"
        },
        requirement_config: {
            only_terms: null,
            full_name: "full_name",
            full_name_and_address: "full_name_and_address"
        }
    },
    bounty: {
        recommended_minimum_usd: 100,
        recommended_minimum_miles: 2e4,
        currency_xla: "xla",
        currency_usd: "usd",
        currency_eur: "eur",
        currency_eur_iso_code: "EUR",
        status: {
            no_tax_form: "Tax form required",
            no_status: "No payment method",
            needs_payout_method: "No payment method",
            needs_tax_form: "Pending tax form",
            pending_ofac_check: "Pending",
            failed_ofac_check: "Pending",
            ofac_reject: "Pending",
            pending: "Pending",
            sent: "Sent",
            confirmed: "Sent",
            rejected: "Failed",
            cancelled: "Failed",
            failed: "Failed",
            no_mileage_account: "Miles account required",
            external_payment: "External payment"
        },
        statusTooltips: {
            no_tax_form: "Before we can begin the payment process, United States tax law requires that we collect some information from you.",
            no_status: "Set up a payment method in order to receive rewards.",
            needs_payout_method: "Set up a payment method in order to receive rewards.",
            needs_tax_form: "Payments are initiated once your tax forms have been processed. Questions? Please contact support@hackerone.com.",
            pending_ofac_check: "Payments take 5 to 10 business days. Questions? Please contact support@hackerone.com.",
            failed_ofac_check: "Payments take 5 to 10 business days. Questions? Please contact support@hackerone.com.",
            ofac_reject: "Payments take 5 to 10 business days. Questions? Please contact support@hackerone.com.",
            pending: "Payments take 5 to 10 business days. Questions? Please contact support@hackerone.com.",
            rejected: "Your payment failed. Support will reach out to you soon. Questions? Please contact support@hackerone.com.",
            cancelled: "Your payment failed. Support will reach out to you soon. Questions? Please contact support@hackerone.com.",
            failed: "Your payment failed. Support will reach out to you soon. Questions? Please contact support@hackerone.com.",
            no_mileage_account: "You got awarded Lufthansa miles, setup your account to receive your bounty!"
        }
    },
    program_health_acknowledgement_reasons: {
        grace_period: "grace_period",
        in_review: "in_review",
        paused: "paused",
        ok: "ok"
    },
    program_health_chart_labels: {
        missed_target: "Missed target",
        missed_standard: "Missed standard"
    },
    sla_snapshot_intervals: {
        day: {
            key: "day",
            title: "Daily"
        },
        week: {
            key: "week",
            title: "Weekly"
        },
        month: {
            key: "month",
            title: "Monthly"
        }
    },
    dashboard: {
        minStartDate: "2013-11-06"
    },
    programDashboard: {
        colors: {
            pink_darker: "#7b083e",
            pink: "#e10e71",
            red_lighter: "#e7636c",
            yellow: "#f3b234",
            green: "#09a571",
            blue_darker: "#112659",
            blue_dark: "#214cb2",
            blue: "#2d68f4",
            green_lighter: "#8fdac1",
            gray: "#777777"
        },
        intervals: {
            day: "day",
            week: "week",
            month: "month",
            quarter: "quarter",
            year: "year"
        },
        minStartDate: "2013-01-01",
        allMetrics: ["submitted_reports", "triaged_reports", "resolved_reports", "valid_reports", "valid_reports_bounties", "duplicate_reports", "informative_reports", "not_applicable_reports", "spam_reports", "closed_reports", "valid_none_severity_reports", "valid_none_severity_reports_bounties", "valid_low_severity_reports", "valid_low_severity_reports_bounties", "valid_medium_severity_reports", "valid_medium_severity_reports_bounties", "valid_high_severity_reports", "valid_high_severity_reports_bounties", "valid_critical_severity_reports", "valid_critical_severity_reports_bounties", "valid_without_severity_reports", "valid_without_severity_reports_bounties", "valid_reports_per_weakness", "valid_reports_per_scope"]
    },
    leaderboard: {
        rollingWindow: "invites"
    },
    permissions: {
        reward_management: "reward_management",
        report_management: "report_management",
        program_management: "program_management",
        user_management: "user_management",
        support_open_source_review: "support_open_source_review",
        support_mutation: "support_mutation",
        support_saml: "support_saml",
        support_directory: "support_directory",
        support_customer_success: "support_customer_success",
        support_hacker_success: "support_hacker_success",
        support_sales: "support_sales",
        support_finance: "support_finance",
        support_marketing: "support_marketing",
        support_hr: "support_hr",
        support_sql_query_analyzer: "support_sql_query_analyzer",
        support_engineering: "support_engineering",
        support_payments_duty: "support_payments_duty",
        support_community: "support_community",
        support_it: "support_it",
        support_support: "support_support",
        support_technical_program_manager: "support_technical_program_manager",
        support_pentest_manager: "support_pentest_manager",
        capabilities: {
            read_only: ["View reports", "Post internal comments"],
            user_management: ["Add/Remove users", "Edit user permissions"],
            reward_management: ["Grant rewards (bounty & swag)", "Post comments", "Suggest bounties"],
            program_management: ["Edit profile, program and bounty settings", "Invite hackers", "View billing information", "Edit inbox views"],
            report_management: ["Post comments", "Change report states (Assign, Triage, Close)", "Request retests", "Approve retests (automatically awards retesters)", "Edit report titles and vulnerability types", "Suggest bounties", "Add/Remove external participants from reports", "Edit common responses", "Edit triggers", "Request disclosure", "Agree to disclosure request"]
        },
        translations: {
            read_only: "Default (Read-only)",
            user_management: "Admin",
            reward_management: "Reward",
            report_management: "Report",
            program_management: "Program",
            support_community: "Support Community",
            support_customer_success: "Support Customer Success",
            support_directory: "Support Directory",
            support_engineering: "Support Engineering",
            support_finance: "Support Finance",
            support_hacker_success: "Support Hacker Success",
            support_hr: "Support Human Resources",
            support_it: "Support IT",
            support_marketing: "Support Marketing",
            support_mutation: "Support Mutation",
            support_open_source_review: "Support Open Source Review",
            support_pentest_manager: "Support Pentest Manager",
            support_sales: "Support Sales",
            support_saml: "Support SAML",
            support_support: "Support Support"
        }
    },
    skill: {
        status: {
            verified: "verified",
            pending_review: "pending_review",
            action_required: "action_required"
        }
    },
    gates: {
        all: {
            saml: "saml",
            ip_whitelisting: "ip_whitelisting",
            team_member_groups: "team_member_groups",
            hacker_invitations: "hacker_invitations",
            api: "api",
            read_only_api: "read_only_api",
            slack_integration: "slack_integration",
            url_issue_tracker: "url_issue_tracker",
            custom_issue_tracker: "custom_issue_tracker",
            request_mediation: "request_mediation",
            save_custom_views: "save_custom_views",
            jira_webhooks: "jira_webhooks",
            phabricator_integration: "phabricator_integration",
            hacker_messaging: "hacker_messaging",
            common_responses: "common_responses",
            credential_management: "credential_management",
            custom_fields: "custom_fields",
            program_analytics_benchmarks: "program_analytics_benchmarks",
            embedded_submission_customization: "embedded_submission_customization"
        },
        open: "open",
        closed: "closed"
    },
    securityRequirementRatings: ["none", "low", "medium", "high"],
    securityRequirements: ["confidentiality_requirement", "integrity_requirement", "availability_requirement"],
    assetTypes: {
        CIDR: {
            name: "CIDR",
            action: "CIDR",
            readableName: "CIDR",
            description: "Classless Inter-Domain Routing for denoting your IP ranges.",
            placeholder: "e.g. 192.168.100.14/24"
        },
        URL: {
            name: "URL",
            action: "Domain",
            readableName: "domain",
            description: "Domain of the asset. Wild card (*) may be used.",
            placeholder: "e.g. www.example.com, *.myprogram.com"
        },
        APPLE_STORE_APP_ID: {
            name: "APPLE_STORE_APP_ID",
            action: "iOS: App Store",
            readableName: "iOS app",
            description: "The identifier on Apple Store to locate your App.",
            placeholder: "e.g. com.example.myapp"
        },
        TESTFLIGHT: {
            name: "TESTFLIGHT",
            action: "iOS: Testflight",
            readableName: "iOS Testflight app",
            description: "If you will be providing a different version than available on the App Store, please detail the invitation process in the instructions."
        },
        OTHER_IPA: {
            name: "OTHER_IPA",
            action: "iOS: .ipa",
            readableName: "iOS app store package file",
            description: "If you will be providing a different version than available on the App Store or Testflight, please detail where they can be located.",
            placeholder: "e.g. com.example.myapp"
        },
        GOOGLE_PLAY_APP_ID: {
            name: "GOOGLE_PLAY_APP_ID",
            action: "Android: Play Store",
            readableName: "Android app",
            description: "The id on Play Store used to locate your App.",
            placeholder: "e.g. com.example.myapp"
        },
        OTHER_APK: {
            name: "OTHER_APK",
            action: "Android: .apk",
            readableName: "Android app store package file",
            description: "If you will be providing a different version than available on the Play Store, please detail where they can be located.",
            placeholder: "e.g. com.example.myapp"
        },
        WINDOWS_APP_STORE_APP_ID: {
            name: "WINDOWS_APP_STORE_APP_ID",
            action: "Windows: Microsoft Store",
            readableName: "Windows app",
            description: "The identifier on Microsoft Store used to locate your App.",
            placeholder: "e.g. 9WZDNCRFHVJL, Microsoft.SDKSamples.ApplicationDataSample"
        },
        SOURCE_CODE: {
            name: "SOURCE_CODE",
            action: "Source code",
            readableName: "source code",
            description: "Link to the repository of an open source project.",
            placeholder: "https://github.com/MyTeam/fancy_project"
        },
        DOWNLOADABLE_EXECUTABLES: {
            name: "DOWNLOADABLE_EXECUTABLES",
            action: "Executable",
            readableName: "executable",
            description: "Packaged executable on linux, windows or mac. Open source projects with releases can/should link as a Downloadable executable too.",
            placeholder: "e.g. example.exe"
        },
        HARDWARE: {
            name: "HARDWARE",
            action: "Hardware/IoT",
            readableName: "hardware",
            description: "Identifiable model number and make. Please explain in instructions how to locate the model details, and what they may look like.",
            placeholder: "e.g. 100-440-0.750-3434-A"
        },
        OTHER: {
            name: "OTHER",
            action: "Other",
            readableName: "various scope",
            description: "Any other type of asset that is not contained within the existing taxonomy.",
            placeholder: "e.g. Anything you want, really."
        }
    },
    custom_fields: {
        inboxSeparator: "|",
        types: {
            text: "CustomFieldAttributesText",
            list: "CustomFieldAttributesList",
            checkbox: "CustomFieldAttributesCheckbox",
            datetime: "CustomFieldAttributesDatetime"
        }
    },
    report: {
        maxReferenceLength: 255,
        maxTitleLength: 150,
        allowedOriginalReportSubstates: ["new", "needs-more-info", "triaged", "resolved", "informative", "not-applicable", "duplicate", "retesting", "pending-program-review", "spam"],
        timeUntilSingularDisclosure: "30",
        readableSubstates: {
            editing: "Editing",
            deleted: "Deleted",
            "pre-submission": "Pre-submission",
            "new": "New",
            triaged: "Triaged",
            "needs-more-info": "Needs more info",
            resolved: "Resolved",
            informative: "Informative",
            "not-applicable": "N/A",
            duplicate: "Duplicate",
            spam: "Spam",
            retesting: "Retesting",
            "pending-program-review": "Pending program review"
        },
        all_anc_reasons: ["trial-report", "no-weakness-provided", "classifier_v1", "anonymous_submission"],
        state: {
            draft: "draft",
            open: "open",
            closed: "closed"
        },
        substate: {
            editing: "editing",
            preSubmission: "pre-submission",
            "new": "new",
            needsMoreInfo: "needs-more-info",
            pendingProgramReview: "pending-program-review",
            triaged: "triaged",
            retesting: "retesting",
            duplicate: "duplicate",
            informative: "informative",
            resolved: "resolved",
            notApplicable: "not-applicable",
            spam: "spam"
        },
        severity: {
            noRating: "no_rating",
            none: "none",
            low: "low",
            medium: "medium",
            high: "high",
            critical: "critical",
            all: ["none", "low", "medium", "high", "critical"],
            metrics: {
                attackVector: ["network", "adjacent", "local", "physical"],
                attackComplexity: ["low", "high"],
                privilegesRequired: ["none", "low", "high"],
                userInteraction: ["none", "required"],
                scope: ["unchanged", "changed"],
                confidentiality: ["none", "low", "high"],
                integrity: ["none", "low", "high"],
                availability: ["none", "low", "high"]
            }
        },
        severityOptions: {
            ratingAndCvss: "rating_and_cvss",
            cvss: "cvss"
        },
        action: {
            addComment: "add-comment",
            closeComments: "close-comments",
            agreeOnGoingPublic: "agree-on-going-public",
            assignTo: "assign-to",
            assignToNobody: "assign-to-nobody",
            assignToH1Triage: "assign-to-h1-triage",
            bountyDecision: "set-bounty",
            cancelDisclosureRequest: "cancel-disclosure-request",
            changeState: "change-state",
            closeBug: "close-report",
            manuallyDisclose: "manually-disclose",
            reopenBug: "reopen",
            reassignToTeam: "reassign-to-team",
            createRetest: "create-retest",
            requestRetest: "request-retest",
            cancelRetest: "cancel-retest",
            submitReportDraft: "submit-report-draft",
            deleteReportDraft: "delete-report-draft"
        },
        subAction: {
            bountyAward: "bounty-award",
            bountySuggest: "bounty-suggest",
            swagAward: "swag-award",
            bountyIneligible: "bounty-ineligible"
        },
        disclosableAction: {
            "Activities::BugResolved": "closed",
            "Activities::SwagAwarded": "swag awarded",
            "Activities::BountyAwarded": "bounty awarded",
            "Activities::ReportBecamePublic": "disclosed",
            "Activities::ManuallyDisclosed": "disclosed"
        },
        assignToEntity: {
            nobody: "nobody",
            user: "user",
            group: "group"
        },
        stage: {
            "new": 1,
            closed: 3,
            triaged: 2,
            "public": 4
        },
        summary: {
            publish: "publish",
            unpublish: "unpublish"
        },
        visibility: {
            full: "full",
            noContent: "no-content",
            "private": "private"
        },
        subject: {
            user: "user"
        },
        filters: {
            notPublic: "not-public",
            goingPublicUser: "going-public-user",
            goingPublicTeam: "going-public-team",
            slaViolation: "sla-violation"
        },
        filter: {
            type: {
                all: "type:all",
                bugBounty: "type:bounty-awarded",
                disclosed: "type:public",
                hackerPublished: "type:hacker-published"
            },
            from: "from",
            to: "to"
        },
        sortType: {
            "new": "latest_disclosable_activity_at",
            popular: "popular"
        },
        specificFieldsToTeams: {
            department_of_defense: ["dc3development", "deptofdefense", "dib-vdp-pilot"],
            jet: ["jet"]
        },
        criticalSubmissionType: "critical"
    },
    reportShareToken: {
        googlePlayDa: "google_play_da"
    },
    reputation: {
        amounts: {
            awardBounty: "10-50",
            awardSwag: "0",
            bugAutoClosed: "0",
            bugInformative: "0",
            bugNeedsMoreInfo: "-1",
            bugNotApplicable: "-5",
            bugResolved: "7",
            bugSelfClosed: "0",
            bugSpam: "-10",
            bugTriaged: "7",
            programInactive: "0"
        },
        bugAutoClosed: "BUG_AUTO_CLOSED",
        bugSelfClosed: "BUG_SELF_CLOSED"
    },
    profile: {
        maxWebsiteLength: 80,
        maxTwitterHandleLength: 15,
        maxAboutLength: 150
    },
    team: {
        state: {
            inactive: "inactive",
            sandboxed: "sandboxed",
            daMode: "da_mode",
            privateMode: "soft_launched",
            publicMode: "public_mode"
        },
        stateIndexes: {
            sandboxed: 2,
            da_mode: 3,
            soft_launched: 4,
            public_mode: 5
        },
        privateProgramApplicationRequirement: {
            notSignedIn: "NOT_SIGNED_IN",
            finished: "FINISHED",
            notStarted: "NOT_STARTED",
            alreadyApplied: "ALREADY_APPLIED",
            accepted: "ACCEPTED",
            rejected: "REJECTED",
            invalidTaxForm: "INVALID_TAX_FORM",
            validTaxForm: "VALID_TAX_FORM",
            noApplication: "NO_APPLICATION"
        },
        handle: {
            dod: "deptofdefense",
            disclosureAssistance: "disclosure-assistance",
            publishPlaceholder: "publish-placeholder",
            security: "security"
        },
        hideContentBanner: ["deptofdefense", "github-security-lab"],
        severityDisabledHandles: ["deptofdefense", "dc3development", "dib-vdp-pilot", "privatec"],
        programTargetResponsivenessCriteria: {
            targetTimeToFirstResponse: 24,
            targetTimeToTriage: 48,
            targetTimeToResolution: 720,
            targetTimeToBounty: 720
        },
        responseEfficiencyIndicator: {
            ok: "ok",
            missed: "missed",
            failed: "failed"
        },
        submissionStates: {
            open: "open",
            paused: "paused",
            disabled: "disabled",
            api_only: "api_only"
        },
        triageBountyManagement: {
            none: "none",
            awardBounty: "award_bounty",
            suggestBounty: "suggest_bounty"
        },
        type: {
            team: "Team",
            assessment: "Engagements::Assessment",
            bugbountyprogram: "Engagements::BugBountyProgram",
            challenge: "Engagements::Challenge",
            legacy: "Engagements::Legacy",
            vulnerabilitydisclosureprogram: "Engagements::VulnerabilityDisclosureProgram"
        }
    },
    teamMemberGroup: {
        H1TriageKey: "h1-triage",
        TeamKey: "team"
    },
    hackbotUserAsActor: {
        profile_picture_urls: {
            medium: "/images/avatar_hackbot.medium.png",
            small: "/images/avatar_hackbot.small.png"
        },
        url: "/hackbot"
    },
    sandboxedStaticThanksUsers: [{
        username: "joshua",
        profile_picture: "/images/demo_avatars/joshua.png",
        rank: 1,
        reputation: 621
    }, {
        username: "liol",
        profile_picture: "/images/demo_avatars/liol.png",
        rank: 2,
        reputation: 453
    }, {
        username: "kiera",
        profile_picture: "/images/demo_avatars/kiera.png",
        rank: 3,
        reputation: 345
    }, {
        username: "quinn",
        profile_picture: "/images/demo_avatars/quinn.png",
        rank: 4,
        reputation: 240
    }, {
        username: "louise",
        profile_picture: "/images/demo_avatars/louise.png",
        rank: 5,
        reputation: 142
    }],
    trigger: {
        maxTitleLength: 255
    },
    user: {
        reputationLogPageLimit: 50,
        maxBioLength: 512,
        maxIntroLength: 1e3,
        maxLocationLength: 80,
        maxNameLength: 75,
        maxWebsiteLength: 80,
        maxBugcrowdHandleLength: 25,
        maxCobaltHandleLength: 25,
        maxGitHubHandleLength: 25,
        maxGitLabHandleLength: 25,
        maxLinkedInHandleLength: 25,
        maxTwitterHandleLength: 25,
        maxHackTheBoxHandleLength: 25,
        minPasswordLength: 12,
        maxPasswordLength: 72,
        usernameUpdateInterval: 42,
        demoHackerUsername: "demo-hacker",
        demoUserUsername: "demo-member",
        tshirtSizes: [
            ["Men's Small", "M_Small"],
            ["Men's Medium", "M_Medium"],
            ["Men's Large", "M_Large"],
            ["Men's XLarge", "M_XLarge"],
            ["Men's XXLarge", "M_XXLarge"],
            ["Women's Small", "W_Small"],
            ["Women's Medium", "W_Medium"],
            ["Women's Large", "W_Large"],
            ["Women's XLarge", "W_XLarge"],
            ["Women's XXLarge", "W_XXLarge"]
        ],
        otpBackupCodeLength: "16",
        antiSocialForcesCheckStates: {
            approved: "approved",
            rejected: "rejected",
            waiting: "waiting"
        }
    },
    payoutPreferences: {
        CoinbasePayoutPreferenceType: "Bitcoin (via Coinbase)",
        PaypalPayoutPreferenceType: "PayPal",
        CurrencycloudBankTransferPayoutPreferenceType: "Bank Transfer",
        HackeronePayrollPayoutPreferenceType: "HackerOne Payroll",
        MaxAmount: "10",
        coinbaseCurrency: {
            BTC: "BTC",
            USDC: "USDC"
        }
    },
    taxForm: {
        status: {
            requested: "requested",
            valid: "valid",
            needsReview: "needs_review",
            unavailable: "unavailable   "
        },
        types: {
            w9: "w-9",
            w8ben: "w-8ben"
        },
        userTypes: {
            corporation: "a corporation",
            individual: "an individual"
        }
    },
    login: {
        invalidCredentials: "invalid-credentials",
        validCredentials: "valid-credentials",
        provideOtpCode: "provide-otp-code",
        userInCoolDown: "user-in-cool-down",
        needsSamlAuth: "needs-saml-auth",
        needsDeviceConfirmation: "needs-device-confirmation",
        invalidDeviceId: "invalid-device-id"
    },
    deviceRegistration: {
        nameMaxLength: 40
    },
    emailForwardingTest: {
        running: "pending",
        verified: "verified",
        failed: "unverified",
        pollingInterval: 4444
    },
    samlState: {
        testing: "testing",
        testingSuccessful: "testing_successful",
        approvalRequested: "approval_requested",
        approved: "approved",
        rejected: "rejected",
        enabled: "enabled",
        disabled: "disabled"
    },
    samlTest: {
        created: "created",
        running: "running",
        failed: "failed",
        success: "success",
        pollingInterval: 4444
    },
    teamSettings: {
        general: ["authentication", "audit_log", "billing", "credit_card", "credentials", "domain_ownerships", "edit", "groups", "prepayments", "product_edition", "team_members", "team_members"],
        program: ["api", "proof_of_compliance", "common_responses", "custom_fields", "display_options", "email_settings", "embedded_submission_domains", "export_reports", "genii", "inbox_views", "integrations", "jira_webhooks", "job_listings", "launch", "messaging", "miles", "policy", "response_targets", "reward_settings", "scopes", "security_email_forwarding", "submission_form", "submission_requirements", "swag", "triggers", "webhooks"],
        directory: ["directory_settings"],
        guide: ["setup_guide"]
    },
    triageInbox: {
        views: {
            viewPrioritization: "prioritization",
            viewPristine: "pristine",
            viewOwnedByMe: "owned_by_me",
            viewOwnedByTriage: "owned_by_triage",
            viewRecentlyDismissed: "recently_dismissed"
        },
        reportSubstates: {
            reportSubstateNew: "new",
            reportSubstatePendingProgramReview: "pending_program_review",
            reportSubstateTriaged: "triaged",
            reportSubstateRetesting: "retesting",
            reportSubstateNeedsMoreInfo: "needs_more_info",
            reportSubstateResolved: "resolved",
            reportSubstateNonApplicable: "not_applicable",
            reportSubstateDuplicate: "duplicate",
            reportSubstateSpam: "spam",
            reportSubstateInformative: "informative"
        },
        teamTypes: {
            teamTypeLowVolumeCustomers: "low_volume_customers"
        },
        productEditions: {
            productEditionEnterprise: "Enterprise",
            productEditionProfessional: "Professional"
        },
        dismissalStates: {
            dismissalStateUndismissed: "undismissed",
            dismissalStateDismissed: "dismissed"
        },
        blockedReasonsOther: "other",
        priorities: {
            high: "high",
            regular: "regular"
        }
    },
    dashboardItems: {
        dashboard: ["dashboard"]
    },
    programDashboardItems: {
        programDashboard: ["program_overview", "program_dashboard", "program_submissions", "submissions_and_bounty", "program_statistics", "program_health", "feedback", "explore", "coverage_analytics", "hacker_engagement", "engagement", "assessments"]
    },
    credentials: {
        hiddenCredentialFields: ["asset", "asset_id", "assigned_to"],
        maxCsvRows: "1000",
        maxInquiryResponseLength: "5000",
        amplitude: {
            createCredentialsEventName: "credentials assets created",
            resetAllCredentialsEventName: "credentials reset all"
        }
    },
    campaigns: {
        objectives: [{
            key: "test_new_asset",
            title: "Test new assets",
            description: "Test if your assets are ready before exposing to a wider audience of researchers."
        }, {
            key: "re_engage_researchers",
            title: "Re-engage with researchers",
            description: "Re-activate researchers already in your program."
        }, {
            key: "get_vulnerabilities",
            title: "Get more high and critical vulnerabilities",
            description: "Prioritize identification of high & critical vulnerabilities."
        }],
        campaign_type: {
            bonus: "bonus",
            multiplier: "multiplier"
        },
        statuses: {
            scheduled: "scheduled",
            active: "active",
            inactive: "inactive"
        },
        amplitude: {
            creationStarted: "campaign creation started",
            objectiveSelected: "campaign objective selected",
            creationSubmitted: "campaign creation submitted",
            creationCompleted: "campaign creation completed"
        }
    },
    maturityModel: {
        maxPoints: "3",
        employeeCount: {
            "1 to 4": 4,
            "5 to 49": 49,
            "50 to 99": 99,
            "100 to 149": 149,
            "150 to 499": 499,
            "500 to 999": 999,
            "1000 to 2499": 2499,
            "2500 to 4999": 4999,
            "5,000 to 9,999": 9999,
            "10,000 to 24,999": 24999,
            "25,000+": 25e3
        },
        industries: ["Education", "Energy", "Finance", "Food & Beverage", "Gaming", "Government", "Healthcare", "Hospitality", "Insurance", "Manufacturing", "Media", "Medical Devices", "Other", "Recreation", "Retail", "Technology - B2B", "Technology - B2C", "Technology - Mobile Apps", "Telecommunications", "Transportation", "Utilities"],
        countries: ["Aruba", "Afghanistan", "Angola", "Anguilla", "\xc5land Islands", "Albania", "Andorra", "United Arab Emirates", "Argentina", "Armenia", "American Samoa", "Antarctica", "French Southern Territories", "Antigua and Barbuda", "Australia", "Austria", "Azerbaijan", "Burundi", "Belgium", "Benin", "Bonaire, Sint Eustatius and Saba", "Burkina Faso", "Bangladesh", "Bulgaria", "Bahrain", "Bahamas", "Bosnia and Herzegovina", "Saint Barth\xe9lemy", "Belarus", "Belize", "Bermuda", "Bolivia", "Brazil", "Barbados", "Brunei Darussalam", "Bhutan", "Bouvet Island", "Botswana", "Central African Republic", "Canada", "Cocos (Keeling) Islands", "Switzerland", "Chile", "China", "C\xf4te d'Ivoire", "Cameroon", "Congo, The Democratic Republic of the", "Congo", "Cook Islands", "Colombia", "Comoros", "Cabo Verde", "Costa Rica", "Cuba", "Cura\xe7ao", "Christmas Island", "Cayman Islands", "Cyprus", "Czechia", "Germany", "Djibouti", "Dominica", "Denmark", "Dominican Republic", "Algeria", "Ecuador", "Egypt", "Eritrea", "Western Sahara", "Spain", "Estonia", "Ethiopia", "Finland", "Fiji", "Falkland Islands (Malvinas)", "France", "Faroe Islands", "Micronesia, Federated States of", "Gabon", "United Kingdom", "Georgia", "Guernsey", "Ghana", "Gibraltar", "Guinea", "Guadeloupe", "Gambia", "Guinea-Bissau", "Equatorial Guinea", "Greece", "Grenada", "Greenland", "Guatemala", "French Guiana", "Guam", "Guyana", "Hong Kong", "Heard Island and McDonald Islands", "Honduras", "Croatia", "Haiti", "Hungary", "Indonesia", "Isle of Man", "India", "British Indian Ocean Territory", "Ireland", "Iran, Islamic Republic of", "Iraq", "Iceland", "Israel", "Italy", "Jamaica", "Jersey", "Jordan", "Japan", "Kazakhstan", "Kenya", "Kyrgyzstan", "Cambodia", "Kiribati", "Saint Kitts and Nevis", "South Korea", "Kuwait", "Lao People's Democratic Republic", "Lebanon", "Liberia", "Libya", "Saint Lucia", "Liechtenstein", "Sri Lanka", "Lesotho", "Lithuania", "Luxembourg", "Latvia", "Macao", "Saint Martin (French part)", "Morocco", "Monaco", "Moldova", "Madagascar", "Maldives", "Mexico", "Marshall Islands", "North Macedonia", "Mali", "Malta", "Myanmar", "Montenegro", "Mongolia", "Northern Mariana Islands", "Mozambique", "Mauritania", "Montserrat", "Martinique", "Mauritius", "Malawi", "Malaysia", "Mayotte", "Namibia", "New Caledonia", "Niger", "Norfolk Island", "Nigeria", "Nicaragua", "Niue", "Netherlands", "Norway", "Nepal", "Nauru", "New Zealand", "Oman", "Pakistan", "Panama", "Pitcairn", "Peru", "Philippines", "Palau", "Papua New Guinea", "Poland", "Puerto Rico", "North Korea", "Portugal", "Paraguay", "Palestine, State of", "French Polynesia", "Qatar", "R\xe9union", "Romania", "Russian Federation", "Rwanda", "Saudi Arabia", "Sudan", "Senegal", "Singapore", "South Georgia and the South Sandwich Islands", "Saint Helena, Ascension and Tristan da Cunha", "Svalbard and Jan Mayen", "Solomon Islands", "Sierra Leone", "El Salvador", "San Marino", "Somalia", "Saint Pierre and Miquelon", "Serbia", "South Sudan", "Sao Tome and Principe", "Suriname", "Slovakia", "Slovenia", "Sweden", "Eswatini", "Sint Maarten (Dutch part)", "Seychelles", "Syrian Arab Republic", "Turks and Caicos Islands", "Chad", "Togo", "Thailand", "Tajikistan", "Tokelau", "Turkmenistan", "Timor-Leste", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Tuvalu", "Taiwan", "Tanzania", "Uganda", "Ukraine", "United States Minor Outlying Islands", "Uruguay", "United States", "Uzbekistan", "Holy See (Vatican City State)", "Saint Vincent and the Grenadines", "Venezuela", "Virgin Islands, British", "Virgin Islands, U.S.", "Vietnam", "Vanuatu", "Wallis and Futuna", "Samoa", "Yemen", "South Africa", "Zambia", "Zimbabwe", "Kosovo"]
    },
    analytics: {
        config: {
            googleAnalytics: {
                enabled: !0,
                trackingId: "UA-49905813-1",
                debug: !1,
                cookieDomain: "auto"
            },
            amplitude: {
                enabled: !0,
                jsApiKey: "b7cba2c14c3aee3ab2e7dbb8c13261fe"
            }
        },
        marketing: {
            inbound: "Marketing - Inbound",
            outbound: "Marketing - Outbound",
            ib_ws_sign: "IB-WS-Sign"
        },
        design: {
            tracking: "Design - Tracking"
        },
        statistics: {
            bounty: "Recommendation for bounty",
            suggestion: "Recommendation for suggested bounty"
        },
        onboarding: {
            setup_guide: "Setup Guide Analytics"
        },
        policy_builder: "Policy Builder",
        triage_rating: "Triage Rating",
        dupe_detection: "Dupe detection console - Interactions",
        remediation_guidance: "Remediation Guidance",
        program_dashboard: "program dashboard",
        program_overview: "Program Overview",
        unified_program_dashboard: "Unified Program Dashboard",
        knowledge_base: "Knowledge Base",
        team_profile: "Team Profile",
        directory: "Directory",
        opportunities: "Opportunities",
        hackerone_triage: "HackerOne Triage",
        asset_inventory: "Asset Inventory",
        triage_inbox: "Triage Inbox"
    },
    supportRequest: {
        maxDescriptionLength: 1e4,
        mediationRequestTypes: {
            unresponsive: "Team is unresponsive",
            bounty: "Disagree with the bounty decision",
            resolution: "Disagree with the resolution",
            other: "Other"
        }
    },
    common_response_triggers: [{
        action: "change-state",
        name: "Change State",
        events: [{
            name: "triaged",
            title: "Triaged"
        }, {
            name: "needs-more-info",
            title: "Needs more info"
        }, {
            name: "new",
            title: "New"
        }]
    }, {
        action: "close-report",
        name: "Close Report",
        events: [{
            name: "resolved",
            title: "Resolved"
        }, {
            name: "informative",
            title: "Informative"
        }, {
            name: "not-applicable",
            title: "Not applicable"
        }, {
            name: "duplicate",
            title: "Duplicate"
        }, {
            name: "spam",
            title: "Spam"
        }]
    }, {
        action: "set-bounty",
        name: "Set Bounty",
        events: [{
            name: "bounty-award",
            title: "Award bounty"
        }, {
            name: "bounty-ineligible",
            title: "Ineligible for bounty"
        }]
    }],
    stripe_publishable_api_key: "pk_live_NuCk2nwsT3EtynOKNcmt9rdG",
    hacker_reviews: {
        well_written: "Well written report",
        communicative: "Awesome communication",
        professional: "Professionalism",
        friendly: "Friendliness",
        unethical: "Unethical hacking",
        policy_violated: "Policy violations",
        argumentative: "Argumentativeness",
        rude: "Rudeness"
    },
    surveyCategories: {
        invitationRejection: "invitation_rejection",
        programLeave: "program_leave"
    },
    surveyRatingScopeOptions: {
        completedWithSpareTime: 0,
        timeIsJustRight: 1,
        notEnoughTime: 2
    },
    enums: {
        CurrencyCode: {
            Xla: "XLA",
            Usd: "USD"
        },
        CveRequestState: {
            Draft: "draft",
            PendingHackeroneApproval: "pending_hackerone_approval",
            HackeroneApproved: "hackerone_approved",
            PendingMitreApproval: "pending_mitre_approval",
            MitreApproved: "mitre_approved",
            Cancelled: "cancelled"
        },
        CveRequestEvent: {
            SubmitForHackeroneApproval: "submit_for_hackerone_approval",
            Cancel: "cancel"
        },
        earningTypes: ["BountyEarned", "RetestCompleted", "PentestCompleted", "ChecklistCheckCompleted", "UnknownEarningType"]
    },
    audit_log: {
        events: ["teams.agile_accelerator_integration.delete", "teams.agile_accelerator_integration.update", "teams.api_users.create", "teams.api_users.destroy", "teams.audit_log_items.export", "teams.bounties.create", "teams.bounties.schedule", "teams.bounties.recall", "teams.consumption_tier_override.create_or_update", "teams.consumption_tier_override.delete", "teams.groups.create", "teams.groups.update", "teams.groups.destroy", "teams.invitations.members.create", "teams.jira_integration.create", "teams.jira_integration.update", "teams.jira_integration.verify", "teams.jira_integration.destroy", "teams.members.destroy", "teams.member_eligibility.update", "teams.phabricator_integration.update", "teams.phabricator_integration.destroy", "teams.reports.escalate", "teams.reports.reference.destroy", "teams.report.reassign", "teams.reports.export", "teams.reports.export_lifetime", "teams.reports.exports.pentest", "teams.saml_settings.update", "teams.slack_integration.create", "teams.slack_integration.destroy", "teams.slack_pipeline.create", "teams.slack_pipeline.destroy", "teams.webhook.delete", "teams.update", "teams.webhook.create", "teams.webhook.update", "teams.webhook.destroy", "teams.webhook.test_request", "teams.tray.solution_instance.create", "teams.tray.solution_instance.update", "teams.tray.solution_instance.destroy", "teams.tray.solution_instance.test", "teams.tray.destroy_integration", "organizations.tray.solution_instance.update", "organizations.tray.destroy_integration", "organizations.members.create", "organizations.members.destroy", "organizations.members.update", "organizations.members.toggle_admin", "organizations.member_groups.create", "organizations.member_groups.destroy", "organizations.member_groups.update", "organizations.inboxes.create", "organizations.inboxes.destroy", "organizations.inboxes.update", "organizations.invitations.members.create", "organizations.invitations.members.cancel", "organizations.asset.create"],
        source_types: ["auto_ban", "atlassian_uninstaller", "data_migration", "product_edition_downgrader", "saml_jit_provisioner", "sandbox_setup", "slack_api_error"],
        minStartDate: "2019-06-25"
    },
    facebook_team: {
        app_id: "729816465017016",
        external_url: "https://www.facebook.com/whitehat/"
    },
    structured_policy: {
        policy_sections: [
            ["brand_promise", "scope", "process", "safe_harbor", "preferences"]
        ]
    },
    retest: {
        insufficient_balance_error: "insufficient-funds-error",
        default_number_of_retesters: 3,
        default_award_amount: 50,
        days_before_retest_approval_nudges: 3,
        time_to_complete_retest_hours: 72
    },
    hacktivity: {
        maxShownVoters: 10
    },
    opportunities: {
        team_search_statistic: {
            categories: {
                program_type: "program_type",
                asset: "asset",
                industry: "industry",
                company: "company"
            }
        }
    },
    subscriptionTypes: {
        user: "user",
        report: "invitation",
        invitation: "report"
    },
    notificationDeliveryPreferenceTypes: [{
        type: "Mention",
        label: "Mentions (anywhere)"
    }, {
        type: "NewSubmission",
        label: "New Reports"
    }, {
        type: "SubmissionUpdate",
        label: "Report Updates"
    }, {
        type: "HackerComment",
        label: "Comments by hackers"
    }, {
        type: "TeamComment",
        label: "Comments by program staff"
    }, {
        type: "Award",
        label: "Award activity"
    }, {
        type: "Disclose",
        label: "Disclosure activity"
    }],
    notificationDeliveryPreferenceValues: {
        none: "none",
        notifications: "notifications",
        notifications_and_emails: "notifications_and_emails"
    },
    featureToggles: {
        TEAMS_UPLOAD_COVER_PHOTO: "teams-upload-cover-photo",
        SILENT_TEAM_MEMBER_INVITES: "silent-team-member-invites",
        CLONE_REPORT: "clone-report",
        EDIT_UNCLAIMED_PROFILES: "edit-unclaimed-profiles",
        LEGACY_BILLING: "legacy-billing",
        SAML_JIT_TEAM_MEMBERSHIP: "saml-jit-team-membership",
        SAML_JIT_WHITELISTED_REPORTER: "saml-jit-whitelisted-reporter",
        HACKING_TEAMS: "hacking-teams",
        CVE_ASSIGNMENTS: "cve-assignments",
        SHINE_API_EXTENSION: "shine-api-extension",
        NO_MINIMUM_BOUNTY: "no-minimum-bounty",
        CUSTOM_FIELDS_TRIAL: "custom-fields-trial",
        AGILE_ACCELERATOR_INTEGRATION: "agile-accelerator-integration",
        HACKER_RESUME: "hacker-resume",
        REPORT_LINK_SHARING: "report-link-sharing",
        DARK_MODE: "dark-mode",
        GATEWAY_SETTINGS: "gateway-settings",
        ADVANCED_VETTING_SETTINGS: "advanced-vetting-settings",
        NEW_PENTEST_RETEST: "new-pentest-retest",
        PENTEST_TASK: "pentest-task",
        NEW_HACKER_PAYMENTS: "new-hacker-payments",
        EARNINGS_PAYOUTS_PAGE: "earnings-payouts-page",
        BACKFILL_NEW_SIGNAL: "backfill-new-signal",
        BACKFILL_SUBMITTED_AT: "backfill-submitted-at",
        JOB_BOARD: "job-board",
        EXPORT_REPORT_PDF: "export-report-pdf",
        SUPPORT_APP_PERMISSIONS: "support-app-permissions",
        TRIAGE_SIDEBAR_JIRA_ESCALATION: "triage-sidebar-jira-escalation",
        COVERAGE_ANALYTICS: "coverage-analytics",
        HACKER_ENGAGEMENT_RETENTION: "hacker-engagement-retention",
        H1_GATEWAY_PROJECT: "h1-gateway-project",
        BETTER_DUPLICATE_DETECTION: "better-duplicate-detection",
        SAML_REPLAY_PREVENTION: "saml-replay-prevention",
        REPORT_DRAFTS: "report-drafts",
        APOLLO_INBOX_REPORT_REPLY: "apollo-inbox-report-reply",
        APOLLO_INBOX_SEVERITY_MODAL: "apollo-inbox-severity-modal",
        SKIP_JIRA_LOGS: "skip-jira-logs",
        CHILD_PROGRAM_DIRECTORY: "child-program-directory",
        NEW_LEADERBOARDS: "new-leaderboards",
        DEMO_TRIAGE_RATING: "demo-triage-rating",
        REPORT_CONTROLLER_PDF: "report-controller-pdf",
        SKIP_20200830_DATA_MIGRATION: "skip-20200830-data-migration",
        INTERACTIVE_MARKDOWN: "interactive-markdown",
        REPORT_HOST_SCOPE_MATCHES: "report-host-scope-matches",
        BETTER_FEATURES_PAGE: "better-features-page",
        REMEDIATION_GUIDANCE: "remediation-guidance",
        HACKER_POC_RECORDER: "hacker-poc-recorder",
        BETTER_PROTECTOR_PERFORMANCE: "better-protector-performance",
        HACKATHON_LEADERBOARD_QUERY_FIX: "hackathon-leaderboard-query-fix",
        HACKER_TRIAGE_RATINGS: "hacker-triage-ratings",
        RETESTING_DIRECT_APPROVAL: "retesting-direct-approval",
        RETESTING_H1B_H1C_SUBSCRIPTION: "retesting-h1b-h1c-subscription",
        BETTER_EMBEDDED_SUBMISSION_FORM: "better-embedded-submission-form",
        HAK_9000: "hak-9000",
        EMBEDDED_SUBMISSION_FORM_COLORS: "embedded-submission-form-colors",
        HACKDAY_HACKERONE_RECOMMENDS: "hackday-hackerone-recommends",
        BOUNTY_CALCULATOR: "bounty-calculator",
        TALENT_MAP: "talent-map",
        SELF_CONSOLIDATING_MENU: "self-consolidating-menu",
        COC_UPDATES: "coc-updates",
        PROGRAM_OVERVIEW: "program-overview",
        HACKER_API: "hacker-api",
        FORWARDED_EMAILS_OVERVIEW_PAGE: "forwarded_emails_overview_page",
        SMART_PRICING: "smart-pricing",
        COLLABORATION_SETTINGS: "collaboration-settings",
        MARKDOWN_TRANSLATION: "markdown-translation",
        REPORT_METADATA_SIDEBAR: "report-metadata-sidebar",
        SCOPE_HIGHLIGHTING: "scope-highlighting",
        TRIAGE_NOISE_REASON: "triage-noise-reason",
        QUICK_COMMENT: "quick-comment",
        TRIAGE_PLUS: "triage-plus",
        TRIAGE_PLUS_OWNERSHIP: "triage-plus-ownership",
        VDP_SELF_SIGNUP: "vdp-self-signup",
        UNIFIED_PROGRAM_DASHBOARD: "unified-program-dashboard",
        BOUNTY_RECALL: "bounty-recall",
        ENGAGEMENT_SUMMARY_TEMPLATES: "engagement-summary-templates",
        DOUBLE_TAP: "double-tap",
        QUICKSIGHT_SUPPORT: "quicksight-support",
        COINBASE_USDC_PAYOUTS: "coinbase-usdc-payouts",
        REPORT_METADATA_SIDEBAR_TRIAGER_OVERRIDE: "report-metadata-sidebar-triager-override",
        H1_PRIDE: "h1-pride",
        AWS_ASSESSMENT: "aws-assessment",
        DEVICE_REGISTRATION: "device-registration",
        BOUNTY_TABLE_RANGES: "bounty-table-ranges",
        PREVIEW_SUMMARY_REPORT: "preview-summary-report",
        NEW_BADGE_LOGO: "new-badge-logo",
        GLOBAL_TOP_WEAKNESSES: "global-top-weaknesses",
        ALL_TIME_LEADERBOARD: "all-time-leaderboard",
        KNOWLEDGE_BASE: "knowledge-base",
        DELIVERY_VISIBILITY: "delivery-visibility",
        ORGANIZATION_REPORT_ACCESS: "organization-report-access",
        OCTOBER_21_HACKER_NPS: "october-21-hacker-nps",
        AUTOMATE_PENTEST_CREATION: "automate-pentest-creation",
        CWE_DISTRIBUTION: "cwe-distribution",
        PENTEST_SELF_SERVICE: "pentest-self-service",
        ASSET_INVENTORY: "asset-inventory",
        EXPLORE_DISCLOSURE_METRICS: "explore-disclosure-metrics",
        API_META_EXCLUDE_LAST_PAGE: "api-meta-exclude-last-page",
        ORGANIZATION_USER_GROUPS: "organization-user-groups",
        ASSET_SCOPE_TAB: "asset-scope-tab",
        ORGANIZATION_SAML_DATA_EXPORT: "organization-saml-data-export",
        SECURITY_TXT: "security-txt",
        H1_CAMPAIGNS: "h1-campaigns",
        ELASTIC_OPPORTUNITIES: "elastic-opportunities",
        HACKER_ASSETS_EXPERIMENT: "hacker-assets-experiment",
        DEPRECATE_LOOKER_INVITES: "deprecate-looker-invites",
        CUSTOMER_HACKER_NAV_SPLIT: "customer-hacker-nav-split",
        ANALYTICS_API: "analytics-api",
        ORGANIZATION_INTEGRATIONS: "organization-integrations",
        OPPORTUNITY_CARD_TRACKING: "opportunity-card-tracking",
        ASM_PENTEST_DEMO_INTEGRATION: "asm-pentest-demo-integration",
        ASSET_BASED_CRED_MANAGEMENT: "asset-based-cred-management",
        PENTESTS_HOMEPAGE_TABLE: "pentests-homepage-table",
        HACKER_TIME_TRACKING: "hacker-time-tracking",
        ASSET_LAST_TESTED_AT: "asset-last-tested-at",
        H1_PRONOUNS: "h1-pronouns",
        MARKETPLACE: "marketplace",
        ASSET_FEEDBACK: "asset-feedback",
        HACKWEEK_H1_LUMBER: "hackweek-h1-lumber",
        LEGACY_TRIAGE_INBOX: "legacy-triage-inbox",
        HACKER_ONBOARDING: "hacker-onboarding"
    },
    badges: {
        categories: {
            certification: "certification",
            live_hacking_event: "live_hacking_event",
            platform_activity: "platform_activity",
            other: "other"
        }
    },
    industries: {
        Automotive: "Automotive",
        Aviation: "Aviation",
        "Consumer Discretionary": "Consumer Discretionary",
        "Consumer Staples": "Consumer Staples",
        Energy: "Energy",
        Financials: "Financials",
        "Government & NGO": "Government & NGO",
        Healthcare: "Healthcare",
        Industrials: "Industrials",
        Materials: "Materials",
        "Media & Entertainment": "Media & Entertainment",
        "Real Estate": "Real Estate",
        "Software & Services": "Software & Services",
        "Technology Hardware & Equipment": "Technology Hardware & Equipment",
        "Telecommunication Services": "Telecommunication Services",
        Utilities: "Utilities",
        UNKNOWN: "Unknown"
    },
    industryValues: ["Agriculture & Food", "Automotive", "Aviation & Aerospace", "Computer Hardware & Peripherals", "Computer Software", "Consumer Goods", "Cryptocurrency & Blockchain", "Education", "Electronics & Semiconductor", "Energy & Utilities", "Financial Services & Insurance", "Government EMEA/APAC Local", "Government EMEA/APAC National", "Government NA Federal", "Government NA Local", "Government Other", "Healthcare", "Industrial Manufacturing", "Internet & Online Services", "Internet Software & Services", "Media & Entertainment", "Medical Technology", "Non-Profit & NGO", "Pharmaceuticals", "Professional Services", "Retail & eCommerce", "Telecommunications", "Transportation & Logistics", "Travel & Hospitality"],
    pentests: {
        states: {
            draft: "draft",
            customer_prep: "customer_prep",
            h1_review: "h1_review",
            published: "published",
            scheduled: "scheduled",
            running: "running",
            retesting: "retesting",
            completed: "completed",
            archived: "archived"
        },
        readable_states: {
            draft: "draft",
            customer_prep: "customer_prep",
            h1_review: "h1_review",
            published: "published",
            scheduled: "scheduled",
            running: "running",
            retesting: "retesting",
            completed: "completed"
        },
        methodologies: {
            HACKERONE_WEB_SECURITY_CHECKLIST: "HackerOne Web Security Checklist",
            HACKERONE_API_SECURITY_CHECKLIST: "HackerOne API Security Checklist",
            HACKERONE_IOS_SECURITY_CHECKLIST: "HackerOne iOS Security Checklist",
            HACKERONE_ANDROID_SECURITY_CHECKLIST: "HackerOne Android Security Checklist",
            HACKERONE_EXECUTABLE_SECURITY_CHECKLIST: "HackerOne Executable Security Checklist",
            HACKERONE_AWS_SECURITY_CHECKLIST: "HackerOne AWS Security Checklist",
            HACKERONE_EXTERNAL_NETWORK_SECURITY_CHECKLIST: "HackerOne External Network Security Checklist"
        },
        default_award_amount: 4e3,
        default_award_amount_lead: 5e3,
        default_hour_cap: 40,
        maximum_assets_to_display: 100
    },
    pentesterProfile: {
        yearsExperience: ["1 - 3 years", "3 - 5 years", "5 - 10 years", "10+ years"],
        complianceFrameworks: ["SOC II", "PCI", "HITRUST", "ISO 27001", "HIPAA", "SOX", "GDPR", "NIS Directive", "NHS DSP", "SWIFT CSP", "NIST 800-53"],
        tools: ["Nessus", "Qualys", "Burpsuite Pro", "Alienvault", "Netsparker", "Acunetix", "Rapid7 Nexpose"],
        fluency: ["Native / Bilingual", "Professional", "Limited Working", "Elementary"],
        preferredTimes: ["6AM - 9AM", "9AM - 12PM", "12PM - 5PM", "5PM - 9PM", "9PM - 2AM"],
        weekdays: ["Weekdays", "Weekends"],
        work_schedule: ["Part-time", "Full-time"]
    },
    pentestOpportunity: {
        assets: {
            ios: {
                ID_REGEX: /^[0-9]+$/
            },
            genericApp: {
                ID_REGEX: /^[\w-]+(\.(\*|[\w-]+))+$/
            }
        },
        states: {
            unused: "unused",
            draft: "draft",
            submitted: "submitted",
            in_review: "in_review",
            reviewed: "reviewed",
            sold: "sold",
            provisioning: "provisioning",
            provisioned: "provisioned",
            archived: "archived"
        },
        readable_states: {
            draft: "Draft",
            submitted: "Submitted",
            in_review: "In Review",
            reviewed: "Reviewed"
        }
    },
    headcounts: {
        "1-50": "1 - 50",
        "51-200": "51 - 200",
        "201-500": "201 - 500",
        "501-1000": "501 - 1,000",
        "1001-5000": "1,001 - 5,000",
        "5001-10000": "5,001 - 10,000",
        "10000+": "10,000+",
        UNKNOWN: "Unknown"
    },
    bulkActionRateLimitThreshold: 5,
    vpnInstances: [{
        region: "us-west-2",
        displayName: "Oregon, USA",
        pingEndpoint: "https://ec2.us-west-2.amazonaws.com/ping"
    }, {
        region: "ap-south-1",
        displayName: "Mumbai, India",
        pingEndpoint: "https://ec2.ap-south-1.amazonaws.com/ping"
    }],
    triagerFlagCategories: {
        abuse: "Abuse",
        unprofessional_behavior: "Unprofessional Behavior",
        discussing_private_program_details: "Discussing Private Program Details",
        unauthorized_disclosure: "Disclosing Vulnerability Info Without Approval",
        contacting_security_team_oob: "Contacting the Security team out-of-band",
        service_degradation: "Service Degradation / Unsafe Testing",
        abusive_language: "Abusive language or harassment",
        reputation_farming: "Reputation Farming",
        exposing_pii: "Exposure of PII (customer's employees, customer's clients or third-party vendors)",
        extortion: "Extortion and Blackmail",
        unauthorized_impersonation: "Unauthorized impersonation / Social Engineering",
        h1_clear_violation: "Breaking H1 Clear Rules of Engagement",
        watchlist: "Watchlist"
    },
    accountFlagPriorities: {
        priority_1: "Priority 1",
        priority_2: "Priority 2",
        priority_3: "Priority 3",
        priority_4: "Priority 4",
        priority_5: "Priority 5"
    },
    websafeFonts: ["Arial", "Verdana", "Helvetica", "Tahoma", "Trebuchet MS", "Times New Roman", "Georgia", "Garamond", "Courier New", "Brush Script MT"],
    reportPdfExportTypes: {
        full: "full",
        reporter: "reporter",
        triage: "triage"
    },
    securityTeamSize: {
        small: "small",
        big: "big"
    },
    assetInventory: {
        coverageTypes: {
            all: "all",
            "new": "new",
            inScope: "in_scope",
            outOfScope: "out_of_scope",
            untested: "untested"
        },
        assetTypes: {
            domain: {
                key: "domain",
                name: "Domain",
                action: "Domain",
                identifier: "Domain name",
                description: "Domain of the asset.",
                placeholder: "e.g. example.com, www.example.com"
            },
            url: {
                key: "url",
                name: "Url",
                action: "URL",
                identifier: "URL",
                description: "Full URL address of the asset.",
                placeholder: "e.g. https://www.example.com/api/v2"
            },
            cidr: {
                key: "cidr",
                name: "Cidr",
                action: "CIDR",
                identifier: "Block",
                readableName: "CIDR",
                description: "Classless Inter-Domain Routing for denoting your IP ranges.",
                placeholder: "e.g. 192.168.100.14/24"
            },
            iosAppStore: {
                key: "iosAppStore",
                name: "IosAppStore",
                action: "iOS: App Store",
                identifier: "App Store ID",
                readableName: "iOS app",
                description: "The identifier on Apple Store to locate your App.",
                placeholder: "e.g. com.example.myapp"
            },
            iosTestflight: {
                key: "iosTestflight",
                name: "IosTestflight",
                action: "iOS: Testflight",
                identifier: "App Store ID",
                readableName: "iOS Testflight app",
                description: "If you will be providing a different version than available on the App Store, please detail the invitation process in the instructions.",
                placeholder: "e.g. com.example.myapp"
            },
            iosIpa: {
                key: "iosIpa",
                name: "IosIpa",
                action: "iOS: .ipa",
                identifier: "App Store ID",
                readableName: "iOS app store package file",
                description: "If you will be providing a different version than available on the App Store or Testflight, please detail where they can be located.",
                placeholder: "e.g. com.example.myapp"
            },
            androidPlayStore: {
                key: "androidPlayStore",
                name: "AndroidPlayStore",
                action: "Android: Play Store",
                identifier: "App Store ID",
                readableName: "Android app",
                description: "The id on Play Store used to locate your App.",
                placeholder: "e.g. com.example.myapp"
            },
            androidApk: {
                key: "androidApk",
                name: "AndroidApk",
                action: "Android: .apk",
                identifier: "App Store ID",
                readableName: "Android app store package file",
                description: "If you will be providing a different version than available on the Play Store, please detail where they can be located.",
                placeholder: "e.g. com.example.myapp"
            },
            windowsMicrosoftStore: {
                key: "windowsMicrosoftStore",
                name: "WindowsMicrosoftStore",
                action: "Windows: Microsoft Store",
                identifier: "App Store ID",
                readableName: "Windows app",
                description: "The identifier on Microsoft Store used to locate your App.",
                placeholder: "e.g. 9WZDNCRFHVJL, Microsoft.SDKSamples.ApplicationDataSample"
            },
            sourceCode: {
                key: "sourceCode",
                name: "SourceCode",
                action: "Source code",
                identifier: "Available from",
                readableName: "source code",
                description: "Link to the repository of an open source project.",
                placeholder: "https://github.com/MyTeam/fancy_project"
            },
            executable: {
                key: "executable",
                name: "Executable",
                action: "Executable",
                identifier: "Identifier",
                readableName: "executable",
                description: "Packaged executable on linux, windows or mac. Open source projects with releases can/should link as a Downloadable executable too.",
                placeholder: "e.g. example.exe"
            },
            hardware: {
                key: "hardware",
                name: "Hardware",
                action: "Hardware/IoT",
                identifier: "Identifier",
                readableName: "hardware",
                description: "Identifiable model number and make. Please explain in instructions how to locate the model details, and what they may look like.",
                placeholder: "e.g. 100-440-0.750-3434-A"
            },
            otherAsset: {
                key: "otherAsset",
                name: "OtherAsset",
                action: "Other",
                identifier: "Identifier",
                readableName: "various scope",
                description: "Any other type of asset that is not contained within the existing taxonomy.",
                placeholder: "e.g. Anything you want, really."
            }
        },
        securityRequirements: ["confidentiality_requirement", "integrity_requirement", "availability_requirement"],
        filterCategories: {
            businessunit: "Business Unit",
            region: "Region",
            technology: "Technology"
        },
        lastTestedRanges: {
            all: "All time",
            last_24h: "Last 24 hours",
            last_3d: "Last 3 days",
            last_7d: "Last 7 days",
            last_30d: "Last 30 days",
            last_90d: "Last 90 days",
            unknown: "Unknown"
        }
    },
    countryGroupingsByCode: [{
        label: "APAC",
        value: "APAC",
        countries: ["AU", "BD", "BT", "CN", "FJ", "HK", "ID", "IN", "IO", "JP", "KH", "KZ", "LK", "MM", "MN", "MV", "MY", "NP", "NZ", "PG", "PH", "PK", "SG", "TH", "TL", "WS"]
    }, {
        label: "EMEA",
        value: "EMEA",
        countries: ["AD", "AE", "AL", "AM", "AO", "AT", "AZ", "BA", "BE", "BF", "BG", "BH", "BI", "BJ", "BW", "BY", "CG", "CH", "CM", "CY", "CZ", "DE", "DJ", "DK", "DZ", "EE", "EG", "ER", "ES", "ET", "FI", "FR", "GA", "GB", "GE", "GH", "GI", "GM", "GN", "GQ", "GR", "HR", "HU", "IE", "IQ", "IS", "IT", "JO", "KE", "KM", "KW", "LB", "LI", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "ME", "MG", "ML", "MR", "MT", "MU", "MW", "MZ", "NA", "NE", "NG", "NL", "NO", "OM", "PL", "PT", "QA", "RO", "RS", "RU", "RW", "SA", "SC", "SD", "SE", "SI", "SK", "SL", "SM", "SN", "SO", "SS", "ST", "SZ", "TD", "TG", "TN", "TR", "UA", "UG", "YE", "ZA", "ZM", "ZW"]
    }, {
        label: "LATAM",
        value: "LATAM",
        countries: ["AI", "AG", "AR", "AW", "BS", "BB", "BZ", "BM", "BV", "BR", "KY", "CL", "CO", "CR", "CU", "DM", "DO", "EC", "SV", "GF", "GL", "GD", "GP", "GT", "GY", "HT", "HN", "JM", "MQ", "MX", "MS", "NI", "PA", "PY", "PE", "PR", "KN", "LC", "PM", "VC", "GS", "SR", "TT", "TC", "UY"]
    }, {
        label: "North America",
        value: "NorthAmerica",
        countries: ["CA", "US"]
    }],
    h1_logo: "/assets/logo_h1-1a9f0fb5c6787230fb4647c4063d6a666a6e7cdb2a6243418d647d970d097225.png"
};
